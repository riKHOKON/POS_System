/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop.management.application.view;

import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import shop.management.application.DbConnector;
import shop.management.application.model.Dhar;
import shop.management.application.model.Pawna;
import shop.management.application.model.Product;
import shop.management.application.model.User;

/**
 *
 * @author rIslam
 */
public class DharPawnaDetailsForm extends javax.swing.JFrame {

    /**
     * Creates new form LenDenDetailsForm
     */
    private static User currentUser = new User();
    public DharPawnaDetailsForm() throws SQLException {
        initComponents();
        updateItemTable();
         updateItemTableDhar();
         calculatingPawnaTotal();
         calculatingDharTotal();
    }
    public DharPawnaDetailsForm(User u) throws SQLException {
        initComponents();
        updateItemTable();
         updateItemTableDhar();
         calculatingPawnaTotal();
         calculatingDharTotal();
         DharPawnaDetailsForm.currentUser = u;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("All Pawna Items");
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dhar Pawna mall list", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel14.setText("Total From >>>>");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Pawna Product List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(51, 0, 204))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Dhar Product List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Pawna Search Panel"));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like Telecom", "Anik Telecom", "Zobayer Telecom", "Zamil Telecom", "Sarker Telecom" }));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Alive");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1)
                .addComponent(jCheckBox1))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Dhar Search Panel"));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like Telecom", "Anik Telecom", "Zobayer Telecom", "Zamil Telecom", "Sarker Telecom" }));

        jCheckBox2.setText("Alive");

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addGap(18, 18, 18)
                .addComponent(jButton5))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2)
                    .addComponent(jButton5))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jLabel10.setText("Total From >>>>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(jLabel10))
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Pawna Controll Panel "));

        jLabel1.setText("Name :");

        jLabel2.setText("Pawna From :");

        jLabel3.setText("Quanttity :");

        jLabel4.setText("Date :");

        jLabel5.setText("Status :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 0, 0));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 0, 0));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(153, 0, 153));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setText("Item Id:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Returned Qty :");

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Taking Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Index :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(23, 23, 23))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Comparison Panel"));
        jPanel7.setToolTipText("");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/exit.png"))); // NOI18N
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Like Telecom", "Anik Telecom", "Zobayer Telecom", "Zamil Telecom", "Sarker Telecom" }));

        jLabel11.setText("Shop Account :");

        jButton6.setText("GO");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));

        jLabel15.setText("Pawna From :");

        jLabel16.setText("Dhar From :");

        jTextField5.setEditable(false);

        jTextField6.setEditable(false);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(44, 44, 44)))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jCheckBox3.setText("Alive");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3))
        );

        jPanel9.setBackground(new java.awt.Color(0, 0, 51));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Dhar Controll Panel ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel9.setForeground(new java.awt.Color(255, 255, 255));

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Dhar From :");

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Date :");

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Status :");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Name :");

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Quanttity :");

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Item Id:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Index :");

        jTextField7.setEditable(false);
        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(0, 51, 51));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField8.setEditable(false);
        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(0, 51, 51));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField9.setEditable(false);
        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(0, 51, 51));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField10.setEditable(false);
        jTextField10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(0, 51, 51));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField11.setEditable(false);
        jTextField11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField11.setForeground(new java.awt.Color(0, 51, 51));
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField12.setEditable(false);
        jTextField12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField12.setForeground(new java.awt.Color(0, 51, 51));
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField13.setEditable(false);
        jTextField13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField13.setForeground(new java.awt.Color(0, 51, 51));
        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Return Quantity :");

        jTextField14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("Return");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel22)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField13)
                                .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(jTextField9))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        
        try{
            String searchTo = jComboBox1.getSelectedItem().toString();
            
            if(jCheckBox1.isSelected()){
                int qty = 1;
                String sql = "SELECT * FROM item_pawna WHERE From_Whoom='"+searchTo+"' AND Quantity >= '"+qty+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String sql = "SELECT * FROM item_pawna WHERE From_Whoom='"+searchTo+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
             calculatingGrandTotal(searchTo);
        }
        catch(Exception e){
            
        }
        finally{
            try {
                
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // mouse clicked event
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        int row = jTable1.getSelectedRow();
        String index = (jTable1.getModel().getValueAt(row, 0).toString());
        try {
            String query = "SELECT * FROM item_pawna WHERE Id = '"+index+"'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (rs.next()) {
                int id = rs.getInt("Id");
                jLabel13.setText(Integer.toString(id));
                int productId = rs.getInt("ItemId");
                jLabel8.setText(Integer.toString(productId));
                String name = rs.getString("Name");
                jLabel6.setText(name);
                int qty = rs.getInt("Quantity");
                jTextField2.setText(Integer.toString(qty));
                String whoom = rs.getString("From_Whoom");
                jTextField1.setText(whoom);
                String date = rs.getString("Date");
                jFormattedTextField1.setText(date);
                String status = rs.getString("Status");
                jTextField3.setText(status);
                
                System.gc();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       PreparedStatement pst = null;
       Connection con = DbConnector.ConnectDB();
       ResultSet rs = null; 
       String query;
       int index = Integer.valueOf(jLabel13.getText());
       int returnedQty;
       try{
           if("".equals(jTextField4.getText())){
                   JOptionPane.showMessageDialog(null, "Fill up the quantity first!");
           }else{
                    returnedQty = Integer.valueOf(jTextField4.getText());
                     query = "SELECT * FROM item_pawna WHERE Id = '"+index+"'";
                 pst = con.prepareStatement(query);
                 rs = pst.executeQuery();
                if(rs.next()){
                     int id = rs.getInt("Id");
                     //jLabel13.setText(Integer.toString(id));
                     int productId = rs.getInt("ItemId");
                     //jLabel8.setText(Integer.toString(productId));
                     String name = rs.getString("Name");
                     //jLabel6.setText(name);
                     int qty = rs.getInt("Quantity");
                     //jTextField2.setText(Integer.toString(qty));
                     String whoom = rs.getString("From_Whoom");
                     //jTextField1.setText(whoom);
                     String date = rs.getString("Date");
                     //jFormattedTextField1.setText(date);
                     String status = rs.getString("Status");
                    //jTextField3.setText(status);
                    double unitPrice = rs.getDouble("UnitPrice");
                    double totalPrice = rs.getDouble("TotalPrice");
                    query = null;

                         query = "UPDATE item_pawna SET Quantity = ? , Status = ? , TotalPrice = ? WHERE Id = ?";
                         if(qty-returnedQty==0){
                                 int value = JOptionPane.showConfirmDialog(null, "Confirm taking back!","Take back",JOptionPane.YES_NO_OPTION);
                               if (value == 0){
                                   pst = con.prepareStatement(query);
                                 pst.setInt(1,0);
                                 pst.setString(2,"No Transection remains.");
                                 pst.setDouble(3,0.0);
                                 pst.setInt(4, index);
                                 pst.executeUpdate();
                                 JOptionPane.showMessageDialog(null,"Sucessfull.");
                               }

                             }else{
                                 int value = JOptionPane.showConfirmDialog(null, "Confirm taking back!","Take back",JOptionPane.YES_NO_OPTION);
                                      if (value == 0){   
                                          pst = con.prepareStatement(query);
                                          pst.setInt(1,qty-returnedQty);
                                          pst.setString(2,"Pending");
                                          pst.setDouble(3, (qty-returnedQty) * unitPrice );
                                          pst.setInt(4, index);
                                          pst.executeUpdate();
                                          JOptionPane.showMessageDialog(null,"Sucessfull.");
                                        }

                             }



                }
           }                    
       }
       catch(SQLException e){
       
       }
       finally{
           try {
              
                rs.close();
                pst.close();
                con.close();
                index = 0;
                returnedQty = 0;
                updateItemTable();
                jLabel8.setText("");
                jLabel13.setText("");
                jLabel8.setText("");               
                jLabel6.setText("");               
                jTextField2.setText("");                
                jTextField1.setText("");              
                jFormattedTextField1.setText("");               
                jTextField3.setText("");
                jTextField4.setText("");
            } catch (SQLException e) {
            
            }
       }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            updateItemTable();
            updateItemTableDhar();
            calculatingPawnaTotal();
            calculatingDharTotal();
        } catch (SQLException ex) {
            Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LenDenFrom(currentUser).setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        
        try{
            String searchTo = jComboBox2.getSelectedItem().toString();
            
            if(jCheckBox2.isSelected()){
                int qty = 1;
                String sql = "SELECT * FROM item_dhar WHERE From_Whoom='"+searchTo+"' AND Quantity >= '"+qty+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String sql = "SELECT * FROM item_dhar WHERE From_Whoom='"+searchTo+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
             calculatingDharGrandTotal(searchTo);
        }
        catch(Exception e){
            
        }
        finally{
            try {
                
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String account = null;
        try{
            
             account = jComboBox3.getSelectedItem().toString();

            combinedSearch(account);
            


        }catch(Exception e){
        }
        finally{
            try{
                String tk = "৳";
                double pai = Double.valueOf(jTextField5.getText());
                double pay = Double.valueOf(jTextField6.getText());
                String string1 = account+" er kasa pawa jaba : ";
                String string2 = account+" paba : ";
                if(pai - pay == 0){
                    jLabel26.setText("LenDen er Poriman : ");
                    jLabel17.setText(tk+" "+Double.toString(Math.abs(pai-pay)));
                }
                else if(pai - pay < 0){
                    jLabel26.setText(string2);
                    jLabel17.setText(tk+" "+Double.toString(Math.abs(pai-pay)));
                }else{
                    jLabel26.setText(string1);
                    jLabel17.setText(tk+" "+Double.toString(Math.abs(pai-pay)));
                }
                pai = 0;
                pay = 0;
            }catch(Exception e){
            
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        int row = jTable2.getSelectedRow();
        String index = (jTable2.getModel().getValueAt(row, 0).toString());
        try {
            String query = "SELECT * FROM item_dhar WHERE Id = '"+index+"'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (rs.next()) {
                int id = rs.getInt("Id");
                jTextField8.setText(Integer.toString(id));
                int productId = rs.getInt("ItemId");
                jTextField7.setText(Integer.toString(productId));
                String name = rs.getString("Name");
                jTextField9.setText(name);
                int qty = rs.getInt("Quantity");
                jTextField11.setText(Integer.toString(qty));
                String whoom = rs.getString("From_Whoom");
                jTextField10.setText(whoom);
                String date = rs.getString("Date");
                jTextField12.setText(date);
                String status = rs.getString("Status");
                jTextField13.setText(status);
                
                System.gc();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       PreparedStatement pst = null;
       Connection con = DbConnector.ConnectDB();
       ResultSet rs = null; 
       String query;
       int index = Integer.valueOf(jTextField8.getText());
       int returnedQty;
       try{
           if("".equals(jTextField14.getText())){
                   JOptionPane.showMessageDialog(null, "Fill up the quantity first!");
           }else{
                    returnedQty = Integer.valueOf(jTextField14.getText());
                     query = "SELECT * FROM item_dhar WHERE Id = '"+index+"'";
                 pst = con.prepareStatement(query);
                 rs = pst.executeQuery();
                if(rs.next()){
                     int id = rs.getInt("Id");
                     //jLabel13.setText(Integer.toString(id));
                     int productId = rs.getInt("ItemId");
                     //jLabel8.setText(Integer.toString(productId));
                     String name = rs.getString("Name");
                     //jLabel6.setText(name);
                     int qty = rs.getInt("Quantity");
                     //jTextField2.setText(Integer.toString(qty));
                     String whoom = rs.getString("From_Whoom");
                     //jTextField1.setText(whoom);
                     String date = rs.getString("Date");
                     //jFormattedTextField1.setText(date);
                     String status = rs.getString("Status");
                    //jTextField3.setText(status);
                    double unitPrice = rs.getDouble("UnitPrice");
                    double totalPrice = rs.getDouble("TotalPrice");
                    query = null;

                         query = "UPDATE item_dhar SET Quantity = ? , Status = ? , TotalPrice = ? WHERE Id = ?";
                         if(qty-returnedQty==0){
                                 int value = JOptionPane.showConfirmDialog(null, "Confirm return back!","Return back",JOptionPane.YES_NO_OPTION);
                               if (value == 0){
                                   pst = con.prepareStatement(query);
                                 pst.setInt(1,0);
                                 pst.setString(2,"No Transection remains.");
                                 pst.setDouble(3,0.0);
                                 pst.setInt(4, index);
                                 pst.executeUpdate();
                                 JOptionPane.showMessageDialog(null,"Sucessfull.");
                               }

                             }else{
                                 int value = JOptionPane.showConfirmDialog(null, "Confirm return back!","Return back",JOptionPane.YES_NO_OPTION);
                                      if (value == 0){   
                                          pst = con.prepareStatement(query);
                                          pst.setInt(1,qty-returnedQty);
                                          pst.setString(2,"Pending");
                                          pst.setDouble(3, (qty-returnedQty) * unitPrice );
                                          pst.setInt(4, index);
                                          pst.executeUpdate();
                                          JOptionPane.showMessageDialog(null,"Sucessfull.");
                                        }

                             }



                }
           }                    
       }
       catch(SQLException e){
       
       }
       finally{
           try {
              
                rs.close();
                pst.close();
                con.close();
                index = 0;
                returnedQty = 0;
                updateItemTable();
                jTextField7.setText("");
                jTextField8.setText("");
                jTextField9.setText("");               
                jTextField10.setText("");               
                jTextField11.setText("");                
                jTextField12.setText("");              
                jTextField13.setText("");               
                jTextField14.setText("");
//                jTextField4.setText("");
            } catch (SQLException e) {
            
            }
       }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DharPawnaDetailsForm().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(DharPawnaDetailsForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private void updateItemTable(){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
         String sql = "SELECT * FROM item_pawna"; 
         pst = con.prepareStatement(sql);
         rs = pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    
    }
    private void updateItemTableDhar(){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
         String sql = "SELECT * FROM item_dhar"; 
         pst = con.prepareStatement(sql);
         rs = pst.executeQuery();
         jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    
    }
    public void calculatingGrandTotal(String telecomWise) throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Pawna allItem : getAllTelecomWiseItems(telecomWise)) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel14.setText("Grand Total of Pawna for : "+telecomWise+" : "+tk+" "+Float.toString(grandTotal));
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
        getAllTelecomWiseItems(telecomWise).clear();
        totalQty = 0;
        grandTotal = 0;
    }
    public void calculatingDharGrandTotal(String telecomWise) throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Dhar allItem : getAllTelecomWiseItemsForDhar(telecomWise)) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel10.setText("Grand Total of Dhar for : "+telecomWise+" : "+tk+" "+Float.toString(grandTotal));
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
        getAllTelecomWiseItemsForDhar(telecomWise).clear();
        totalQty = 0;
        grandTotal = 0;
    }
    public ArrayList<Pawna> getAllTelecomWiseItems(String name) throws SQLException{
        ArrayList<Pawna> pawnaItems = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM item_pawna WHERE From_Whoom = '"+name+"'";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Pawna pawna;
            while(rs.next()){
//                product = new Product(rs.getInt("ProductId"),rs.getString("Name"),rs.getString("Category"),
//                    rs.getString("Company"),rs.getFloat("PurchaseCost"),rs.getInt("Quantity"),
//                    rs.getDate("InhouseDate").toString(),rs.getBytes("Image"),rs.getString("Supplier"),rs.getString("Description"));
                pawna = new Pawna(rs.getInt("Id"),rs.getDouble("UnitPrice"),rs.getDouble("TotalPrice"));
                pawnaItems.add(pawna);
            }
        } catch (SQLException ex) {
           // Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return pawnaItems;
    }
    
    public ArrayList<Dhar> getAllTelecomWiseItemsForDhar(String name) throws SQLException{
        ArrayList<Dhar> dharItems = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM item_dhar WHERE From_Whoom = '"+name+"'";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Dhar dhar;
            while(rs.next()){
//                product = new Product(rs.getInt("ProductId"),rs.getString("Name"),rs.getString("Category"),
//                    rs.getString("Company"),rs.getFloat("PurchaseCost"),rs.getInt("Quantity"),
//                    rs.getDate("InhouseDate").toString(),rs.getBytes("Image"),rs.getString("Supplier"),rs.getString("Description"));
                dhar = new Dhar(rs.getInt("Id"),rs.getDouble("UnitPrice"),rs.getDouble("TotalPrice"));
                dharItems.add(dhar);
            }
        } catch (SQLException ex) {
           // Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return dharItems;
    }
    
    
    public ArrayList<Pawna> getAllPawnaItems() throws SQLException{
        ArrayList<Pawna> pawnaItems = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM item_pawna";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Pawna pawna;
            while(rs.next()){
//                product = new Product(rs.getInt("ProductId"),rs.getString("Name"),rs.getString("Category"),
//                    rs.getString("Company"),rs.getFloat("PurchaseCost"),rs.getInt("Quantity"),
//                    rs.getDate("InhouseDate").toString(),rs.getBytes("Image"),rs.getString("Supplier"),rs.getString("Description"));
                pawna = new Pawna(rs.getInt("Id"),rs.getDouble("UnitPrice"),rs.getDouble("TotalPrice"));
                pawnaItems.add(pawna);
            }
        } catch (SQLException ex) {
           // Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return pawnaItems;
    }
    public void calculatingPawnaTotal() throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Pawna allItem : getAllPawnaItems()) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel14.setText("Grand Total for pawna : "+tk+" "+Float.toString(grandTotal));
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
        getAllPawnaItems().clear();
        totalQty = 0;
        grandTotal = 0;
    }
    public void combinedSearch(String account){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        
        try{
            if(jCheckBox3.isSelected()){
                int qty = 1;
                String sql = "SELECT * FROM item_pawna WHERE From_Whoom='"+account+"' AND Quantity >= '"+qty+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }else{
                String sql = "SELECT * FROM item_pawna WHERE From_Whoom='"+account+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            calculatingGrandTotalForCombineSearch(account);
            try{
//                        String searchTo = jComboBox2.getSelectedItem().toString();

                    if(jCheckBox3.isSelected()){
                        int qty = 1;
                        String sql = "SELECT * FROM item_dhar WHERE From_Whoom='"+account+"' AND Quantity >= '"+qty+"'"; 
                        pst = con.prepareStatement(sql);
                        rs = pst.executeQuery();
                        jTable2.setModel(DbUtils.resultSetToTableModel(rs));
                    }else{
                        String sql = "SELECT * FROM item_dhar WHERE From_Whoom='"+account+"'"; 
                        pst = con.prepareStatement(sql);
                        rs = pst.executeQuery();
                        jTable2.setModel(DbUtils.resultSetToTableModel(rs));
                    }

                    calculatingDharGrandTotalForCombineSearch(account);
                     
                     /*
                     
                     **/
//                                 String pabo = account+" telecom er kasa pawna : ";
//            String debo = account+" telecom paba : ";
//                    double pawna =  Double.valueOf(jTextField5.getText());
//                    double dhar =  Double.valueOf(jTextField6.getText());
//                    if(pawna-dhar == 0){
//                    jLabel26.setText("Len den er Poriman : ");
//                    jLabel17.setText(Double.toString(Math.abs(pawna-dhar)));
//                    }
//                    else if(pawna-dhar < 0){
//
//                    jLabel26.setText(debo);
//                    jLabel17.setText(Double.toString(Math.abs(pawna-dhar)));
//                    }else{
//                    jLabel26.setText(pabo);
//                    jLabel17.setText(Double.toString(pawna-dhar));
//            }
            
            }catch(Exception e){
            
            }
        }
        catch(Exception e){
            
        }
        finally{
            try {
                
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    
    }
    public void calculatingGrandTotalForCombineSearch(String telecomWise) throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Pawna allItem : getAllTelecomWiseItems(telecomWise)) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel15.setText("Total of Pawna form "+telecomWise+" : "+tk+" ");
        jTextField5.setText(Double.toString(grandTotal));
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
        getAllTelecomWiseItems(telecomWise).clear();
        totalQty = 0;
        grandTotal = 0;
    }
    public void calculatingDharGrandTotalForCombineSearch(String telecomWise) throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Dhar allItem : getAllTelecomWiseItemsForDhar(telecomWise)) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel16.setText("Total of Dhar form  "+telecomWise+" : "+tk+" ");
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
       jTextField6.setText(Double.toString(grandTotal)); 
       getAllTelecomWiseItemsForDhar(telecomWise).clear();
        totalQty = 0;
        grandTotal = 0;
    }
    
    public void calculatingDharTotal() throws SQLException{
        int totalQty = 0;
        float grandTotal = 0;
        for (Dhar allItem : getAllDharItems()) {
            grandTotal += ( allItem.getTotalPrice());
        }
        String tk = "৳";
        jLabel10.setText("Grand Total for dhar : "+tk+" "+Float.toString(grandTotal));
       // totalQty_lbl.setText("Total"+category+" :"+Integer.toString(totalQty));
        getAllDharItems().clear();
        totalQty = 0;
        grandTotal = 0;
    }
    public ArrayList<Dhar> getAllDharItems() throws SQLException{
        ArrayList<Dhar> dharItems = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM item_dhar";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Dhar dhar;
            while(rs.next()){
//                product = new Product(rs.getInt("ProductId"),rs.getString("Name"),rs.getString("Category"),
//                    rs.getString("Company"),rs.getFloat("PurchaseCost"),rs.getInt("Quantity"),
//                    rs.getDate("InhouseDate").toString(),rs.getBytes("Image"),rs.getString("Supplier"),rs.getString("Description"));
                dhar = new Dhar(rs.getInt("Id"),rs.getDouble("UnitPrice"),rs.getDouble("TotalPrice"));
                dharItems.add(dhar);
            }
        } catch (SQLException ex) {
           // Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return dharItems;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
