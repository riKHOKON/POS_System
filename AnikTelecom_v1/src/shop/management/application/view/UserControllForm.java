/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop.management.application.view;

import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.proteanit.sql.DbUtils;
import shop.management.application.DbConnector;
import shop.management.application.model.User;

/**
 *
 * @author rIslam
 */
public class UserControllForm extends javax.swing.JFrame {

    /**
     * Creates new form UserControllForm
     * @throws java.sql.SQLException
     */
     private String imagePath = null;
    private static User user = new User();
    
    
    public UserControllForm() throws SQLException {
        initComponents();
        updateUserTable();
        Calendar now = Calendar.getInstance();
        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setDate(now.getTime());
        paymentDate_chooser.setDateFormatString("yyyy-MM-dd");
        paymentDate_chooser.setDate(now.getTime());
        paymentDate_chooser1.setDateFormatString("yyyy-MM-dd");
        paymentDate_chooser1.setDate(now.getTime());
    }
    public UserControllForm(User u) throws SQLException {
        initComponents();
        updateUserTable();
        Calendar now = Calendar.getInstance();
        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setDate(now.getTime());
        paymentDate_chooser.setDateFormatString("yyyy-MM-dd");
        paymentDate_chooser.setDate(now.getTime());
        paymentDate_chooser1.setDateFormatString("yyyy-MM-dd");
        paymentDate_chooser1.setDate(now.getTime());
        UserControllForm.user = u;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        image_lbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        user_tbl = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        userName = new javax.swing.JTextField();
        salary = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        id_lbl = new javax.swing.JLabel();
        userType_cmb = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        paymentStatus_lbl = new javax.swing.JLabel();
        name_lbl = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pSalary_lbl = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        paymentDate_chooser = new com.toedter.calendar.JDateChooser();
        pTotal_lbl = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        caculate_btn = new javax.swing.JButton();
        proceed_btn = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pStatus_lbl = new javax.swing.JTextField();
        paidAmount_lbl = new javax.swing.JTextField();
        paymentDate_chooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Manage Users");
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(102, 102, 102));
        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 51, 0), 1, true), "Customize User"));

        jDesktopPane1.setBackground(new java.awt.Color(0, 102, 0));
        jDesktopPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        image_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        image_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/login.png"))); // NOI18N
        image_lbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                image_lblMouseClicked(evt);
            }
        });

        user_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        user_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(user_tbl);

        jDesktopPane1.setLayer(image_lbl, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(image_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(image_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Personal Information"));

        jLabel1.setText("Name :");

        jLabel2.setText("User Type :");

        jLabel3.setText("Phone :");

        jLabel4.setText("Email :");

        jLabel5.setText("Salary :");

        jLabel6.setText("Address :");

        jLabel8.setText("Joining Date :");

        jLabel10.setText("User Name :");

        jLabel11.setText("Password :");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jScrollPane1.setViewportView(jTextArea1);

        jDateChooser1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        fname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        fname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fname.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        lname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lname.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        email.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        email.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        phone.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        userName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        userName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        salary.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        salary.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        salary.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryActionPerformed(evt);
            }
        });

        password.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        password.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        id_lbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        id_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        id_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        userType_cmb.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userType_cmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "Manager", "Employee", "Helper" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(password)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(userType_cmb, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(salary, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(email, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phone, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(id_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(id_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(userType_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel7))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Edit User"));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/chooseImg.png"))); // NOI18N
        jButton1.setText("Choose Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/refresh-icon.png"))); // NOI18N
        jButton2.setText("Update User Information");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/allCat.png"))); // NOI18N
        jButton3.setText("Add New User");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/remove.png"))); // NOI18N
        jButton4.setText("Delete User");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/cross-circle-frame-icon.png"))); // NOI18N
        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Payment Controls", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel9.setText("Salary Basic :");

        paymentStatus_lbl.setText("Payment Status :");

        name_lbl.setText("Name :");

        jLabel14.setText("Bonus :");

        pSalary_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pSalary_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pSalary_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "2", "3", "5", "10", "20", "50", "100" }));
        jComboBox1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel15.setText("%");

        paymentDate_chooser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        paymentDate_chooser.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        pTotal_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pTotal_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pTotal_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel16.setText("Total :");

        caculate_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        caculate_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/count-icon.png"))); // NOI18N
        caculate_btn.setText("Calculate");
        caculate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caculate_btnActionPerformed(evt);
            }
        });

        proceed_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        proceed_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/ok.png"))); // NOI18N
        proceed_btn.setText("Proceed");
        proceed_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceed_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentStatus_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pSalary_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pTotal_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(caculate_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(proceed_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paymentStatus_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(name_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(pSalary_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15))
                    .addComponent(paymentDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pTotal_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caculate_btn)
                    .addComponent(proceed_btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/refreshww.png"))); // NOI18N
        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Finalcial information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel12.setText("Payment Status :");

        jLabel13.setText("Payment Date :");

        jLabel17.setText("Paid Amount :");

        pStatus_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pStatus_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pStatus_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        paidAmount_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        paidAmount_lbl.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        paidAmount_lbl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        paymentDate_chooser1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        paymentDate_chooser1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(paymentDate_chooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paidAmount_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pStatus_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(pStatus_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paymentDate_chooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(paidAmount_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton6)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(2, 2, 2))))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void image_lblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image_lblMouseClicked
//        try {
//            int index = 0;
//            id_lbl.setText(""+getUserList().get(index).getUserId());
//                fname.setText(getUserList().get(index).getFristName());
//                lname.setText(getUserList().get(index).getLastName());
//                userType_txt.setText(getUserList().get(index).getUserType());
//                email.setText(getUserList().get(index).getEmail());
//                phone.setText(getUserList().get(index).getPhone());
//                java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse(getUserList().get(index).getjDate());
//                jDateChooser1.setDate(date);
//                salary.setText(Float.toString(getUserList().get(index).getSalary()));
//                
//                jTextArea1.setText(getUserList().get(index).getAddress());
//                userName.setText(getUserList().get(index).getUserName());
//                password.setText(getUserList().get(index).getPassword());
//        } catch (SQLException | ParseException ex) {
//            Logger.getLogger(UserControllForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_image_lblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
       
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            image_lbl.setIcon(resizeImage(path,null, image_lbl.getWidth(), image_lbl.getHeight(), Image.SCALE_SMOOTH));
            imagePath = path;
        }else{
            JOptionPane.showMessageDialog(null,"Image not selected.");               
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (checkInputs() && id_lbl.getText() != null) {
            String updateQuery = null;
            PreparedStatement ps = null;
            Connection con = DbConnector.ConnectDB();
            // update without image
            if (imagePath == null) {
                int value = JOptionPane.showConfirmDialog(null, "Do you really want to update!","Update",JOptionPane.YES_NO_OPTION);
                if (value == 0) {
                    updateQuery = "UPDATE users SET FristName = ?,LastName = ?,UserType = ?"
                        +", Email = ?,Phone = ?, Address = ?, JoiningDate  = ?, Salary = ? , Password = ? , UserName = ? WHERE UserId = ?";
                    try {
                        ps = con.prepareStatement(updateQuery);
                        ps.setString(1,fname.getText());
                        ps.setString(2,lname.getText());
                        ps.setString(3,userType_cmb.getSelectedItem().toString());
                        ps.setString(4,email.getText());
                        ps.setString(5,phone.getText());
                        ps.setString(6,jTextArea1.getText());
                        SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                        String addDate = dateFormate.format(jDateChooser1.getDate());
                        ps.setString(7, addDate);
                        ps.setString(8, salary.getText()); 
                        ps.setString(9, password.getText());
                        ps.setString(10, userName.getText());
                        ps.setInt(11, Integer.parseInt(id_lbl.getText()));
                        ps.executeUpdate();
                        showAllUsersToLabels();
                        clearAllFields();
                        JOptionPane.showMessageDialog(null, "User information updated successfully.");
                       
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                    finally{
                        try {
                            ps.close();
                            con.close();
                        } catch (SQLException ex) {
                        }
                    }
                }  
            }
            // update with image
            else{
                try{
                    InputStream img = new FileInputStream(imagePath);   
                    int value = JOptionPane.showConfirmDialog(null, "Do you really want to update!","Update",JOptionPane.YES_NO_OPTION);
                    if (value == 0) {
                        updateQuery = "UPDATE users SET FristName = ?,LastName = ?,UserType = ?"
                        +", Email = ?, Phone = ?, Address = ?, JoiningDate  = ?, Salary = ?,Image = ?, Password = ?, UserName = ? WHERE UserId = ?"; 
                        ps = con.prepareStatement(updateQuery);
                        ps.setString(1,fname.getText());
                        ps.setString(2,lname.getText());
                        ps.setString(3,userType_cmb.getSelectedItem().toString());
                        ps.setString(4,email.getText());
                        ps.setString(5,phone.getText());
                        ps.setString(6,jTextArea1.getText());
                        SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                        String addDate = dateFormate.format(jDateChooser1.getDate());
                        ps.setString(7, addDate);
                        ps.setString(8, salary.getText());
                        ps.setBlob(9,img);
                        ps.setString(10, password.getText());
                        ps.setString(11, userName.getText());
                        ps.setInt(12, Integer.parseInt(id_lbl.getText()));
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "User information updated successfully.");
                        updateUserTable();
//showAllUsersToLabels();
                        clearAllFields();
                    } 
                }catch(HeadlessException | FileNotFoundException | NumberFormatException | SQLException e){
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
                finally{
                    try {
                        ps.close();
                        con.close();
                        
                    } catch (SQLException ex) {
                        
                    }
                }
               
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Error ! Couldn't update user.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         java.awt.EventQueue.invokeLater(() -> {
            new ActivitiesForm(user).setVisible(true);
            this.dispose();
        });
    }//GEN-LAST:event_jButton5ActionPerformed

    private void user_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_tblMouseClicked
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        int row = user_tbl.getSelectedRow();
        String index = (user_tbl.getModel().getValueAt(row, 0).toString());
        try {
            String query = "SELECT * FROM users WHERE UserId = '"+index+"'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (rs.next()) {
                int userId = rs.getInt("UserId");
                id_lbl.setText(Integer.toString(userId));
                String fristName = rs.getString("FristName");
                fname.setText(fristName);
                String lastName = rs.getString("LastName");
                lname.setText(lastName);
                String type = rs.getString("UserType");
                userType_cmb.setSelectedItem((String)type);
                String eMail = rs.getString("Email");
                email.setText(eMail);
                String phn = rs.getString("Phone");
                phone.setText(phn);
                String add = rs.getString("Address");
                jTextArea1.setText(add);
                String dateValue = rs.getString("JoiningDate");
                java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
                jDateChooser1.setDate(date);
                float baton = rs.getFloat("Salary");
                salary.setText(Float.toString(baton));
                byte[] imageData = rs.getBytes("Image");
                image_lbl.setIcon(resizeImage(null, imageData,image_lbl.getWidth(), image_lbl.getHeight(),Image.SCALE_SMOOTH)); 
                String pass = rs.getString("Password");
                password.setText(pass);
                String paymentStatus = rs.getString("PaymentStatus");
                pStatus_lbl.setText(paymentStatus);
                String paymentDate = rs.getString("PaymentDate");
                java.util.Date d = new SimpleDateFormat("yyyy-MM-dd").parse(paymentDate);
                paymentDate_chooser1.setDate(d);
                Float paidAmount = rs.getFloat("PaidAmount");
                paidAmount_lbl.setText(""+paidAmount);
                String userame = rs.getString("UserName");
                userName.setText(userame);
                
                paymentStatus_lbl.setText("Payment Status : "+paymentStatus+", on "+d);
                name_lbl.setText("Name :"+fristName+" "+lastName);
                pSalary_lbl.setText(Float.toString(baton));
                
            }
        } catch (SQLException | ParseException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    }//GEN-LAST:event_user_tblMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        PreparedStatement pst = null;
        Connection con = null;
        
        if (checkInputs() && imagePath != null) {
            try {
                con = DbConnector.ConnectDB();
                int value = JOptionPane.showConfirmDialog(null, "Do you really want to add!","Add",JOptionPane.YES_NO_OPTION);
                if (value == 0) {
                    pst = con.prepareStatement("INSERT INTO users (FristName,LastName,UserType,Email,Phone,Address,JoiningDate,Salary,Image,Password,PaymentStatus,PaymentDate,PaidAmount,UserName) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                     
                        pst.setString(1,fname.getText());
                        pst.setString(2,lname.getText());
                        pst.setString(3, (String)userType_cmb.getSelectedItem());
                        //ps.setString(3,type_txt.getText());
                        pst.setString(4,email.getText());
                        pst.setString(5,phone.getText());
                        pst.setString(6,jTextArea1.getText());
                        SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                        String addDate = dateFormate.format(jDateChooser1.getDate());
                        pst.setString(7, addDate);
                        pst.setString(8, salary.getText());
                        InputStream img = new FileInputStream(new File(imagePath));
                        pst.setBlob(9, img);
                        pst.setString(10, password.getText());
                        pst.setString(11,pStatus_lbl.getText());
                        SimpleDateFormat dateformate = new SimpleDateFormat("yyyy-MM-dd");
                        String paymentDate = dateformate.format(paymentDate_chooser1.getDate());
                        pst.setString(12, paymentDate);
                        pst.setFloat(13, Float.parseFloat(paidAmount_lbl.getText()));
                        pst.setString(14, userName.getText());
                        pst.executeUpdate();
                        updateUserTable();
                        JOptionPane.showMessageDialog(null, "User added successfully.");
                       
                }         
            } catch (FileNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            finally{
                try {
                    pst.close();
                    con.close();
                    clearAllFields();
                } catch (SQLException ex) {
                   
                }
                
            }      
        }else{
            JOptionPane.showMessageDialog(null,"One or more Input fields are empty !");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//        PreparedStatement ps = null;
//        Connection con = null;
//        if (!id_lbl.getText().equals("")) {
//            con = DbConnector.ConnectDB();
//            int value = JOptionPane.showConfirmDialog(null, "Do you really want to delete!","Delete",JOptionPane.YES_NO_OPTION);
//            if (value == 0) {
//                try {
//                ps = con.prepareStatement("DELETE FROM users WHERE UserId = ?");
//                int id = Integer.parseInt(id_lbl.getText());
//                ps.setInt(1, id);
//                ps.executeUpdate();
//                JOptionPane.showMessageDialog(null, "User deleted successfully.");
//                updateUserTable();
//                //show_users_in_table();
//                } catch (SQLException ex) {
//                    
//                }
//                finally{
//                    try {
//                        ps.close();
//                        con.close();
//                    }catch (SQLException ex) {
//                        
//                    }
//                    clearAllFields();  
//                }
//            }
//                
//        }
//        else{
//           JOptionPane.showMessageDialog(null, "User is not deleted. Please confirm user id.");
//        }
        JOptionPane.showMessageDialog(null, "Don't deleter user.\nUpdate or add or deacitvate existing account.\nFor more information call Khokon.");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         java.awt.EventQueue.invokeLater(() -> {
            try {
                new UserControllForm(user).setVisible(true);
                this.dispose();
            } catch (SQLException ex) {
                Logger.getLogger(UserControllForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }//GEN-LAST:event_jButton6ActionPerformed

    private void caculate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caculate_btnActionPerformed
        try {
            float salaryTotal = 0;
            float basic = Float.parseFloat(pSalary_lbl.getText());
            int bonusLimit = Integer.parseInt(jComboBox1.getSelectedItem().toString());
            salaryTotal = basic + ((basic * bonusLimit)/100);
            pTotal_lbl.setText(Float.toString(salaryTotal));
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_caculate_btnActionPerformed

    private void proceed_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceed_btnActionPerformed
        String updateQuery = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        Connection con = DbConnector.ConnectDB();
            
        try {
            double amount = 0;
            updateQuery = null;
            ps = null;
            updateQuery = "SELECT * FROM cashwalet";
            ps = con.prepareStatement(updateQuery);
            rs = ps.executeQuery();
            if (rs.next()) {
                amount += rs.getDouble("Amount");
            }
            if (amount >= Float.parseFloat(pTotal_lbl.getText())) {
                int value = JOptionPane.showConfirmDialog(null, "Confirm Payment!","Payment",JOptionPane.YES_NO_OPTION);
                if (value == 0) {
                    updateQuery = null;
                updateQuery = "UPDATE cashwalet SET Amount = ? WHERE CashWaletId = ?";
                ps = con.prepareStatement(updateQuery);
                ps.setDouble(1,(amount - Float.parseFloat(pTotal_lbl.getText())));
                ps.setInt(2, 1);
                ps.executeUpdate();
                updateQuery = null;
                updateQuery = "UPDATE users SET PaymentStatus = ?,PaymentDate = ?,PaidAmount = ?"
                        +" WHERE UserId = ?";
                if (paymentDate_chooser.getDate() != null && pTotal_lbl.getText()!= null ) {
                    try {
                         //value = JOptionPane.showConfirmDialog(null, "Confirm Payment!","Payment",JOptionPane.YES_NO_OPTION);
                            if (value == 0) {
                                ps = con.prepareStatement(updateQuery);
                                ps.setString(1,"paid");
                        
                                SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                                String addDate = dateFormate.format(paymentDate_chooser.getDate()); 
                                ps.setString(2, addDate);
                                ps.setFloat(3,Float.parseFloat(pTotal_lbl.getText()));
                                ps.setInt(4, Integer.parseInt(id_lbl.getText()));
                                ps.executeUpdate();
                                updateUserTable();
                                JOptionPane.showMessageDialog(null, "User information updated successfully.");
                            }
                            try {
                                ps = con.prepareStatement("INSERT INTO expenses (ExpenseTitle,Description,Date,ExpensedBy,Amount) VALUES (?,?,?,?,?)");
                                ps.setString(1,"Monthly Salary Payment");
                                ps.setString(2, "Salary payment to [ "+name_lbl.getText()+" ]");
                                SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                                String addDate = dateFormate.format(paymentDate_chooser.getDate());
                                ps.setString(3, addDate);
                                ps.setString(4, user.getUserName());
                                ps.setFloat(5, Float.parseFloat(pTotal_lbl.getText()));
                                ps.executeUpdate();
                            } catch (SQLException e) {
                        
                            }
                       
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                        
                    }
                    finally{
                        try {
                            ps.close();
                            con.close();
                            clearAllFields();
                            
                        } catch (SQLException ex) {
                             
                        }
                    }
            }
                }                
            }else{
                JOptionPane.showMessageDialog(null, "Sorry! Money crisis. Please confirm CashIn to walet.");
                clearAllFields();
            }
        } catch (SQLException e) {
        
        }
    }//GEN-LAST:event_proceed_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserControllForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserControllForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserControllForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserControllForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new UserControllForm().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(UserControllForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    private ArrayList<User> getUserList() throws SQLException{
        ArrayList<User> users  = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM users";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            User user;
            while(rs.next()){
                user = new User(rs.getInt("UserId"),rs.getString("FristName"),rs.getString("LastName"),
                rs.getString("UserType"),rs.getString("Email"),rs.getString("Phone"),rs.getString("Address"),
                rs.getString("Password"),rs.getDate("JoiningDate").toString(),rs.getFloat("Salary"),rs.getBytes("Image"),rs.getString("PaymentStatus"),rs.getDate("PaymentDate").toString(),rs.getFloat("PaidAmount"),rs.getString("UserName"));
                users.add(user);
            }
        } catch (SQLException ex) {
           
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return users;
    }
    private void showAllUsersToLabels() throws SQLException{
        int i = 0;
//        int size = 0;
//        size = getUserList().size();
        for (User userList : getUserList()) {
//            switch (i) {
//                case 0:
//                    user1_lbl1.setIcon(resizeImage(null, userList.getPicture(),user1_lbl1.getWidth(), user1_lbl1.getHeight(),Image.SCALE_SMOOTH));
//                    i++;
//                    break;
//                case 1:
//                    user2_lbl.setIcon(resizeImage(null, userList.getPicture(),user2_lbl.getWidth(), user2_lbl.getHeight(),Image.SCALE_SMOOTH));
//                    i++;
//                    break;
//                case 2:
//                    user3_lbl.setIcon(resizeImage(null, userList.getPicture(),user3_lbl.getWidth(), user3_lbl.getHeight(),Image.SCALE_SMOOTH));
//                    break;
//                case 3:
//                    user4_lbl.setIcon(resizeImage(null, userList.getPicture(),user4_lbl.getWidth(), user4_lbl.getHeight(),Image.SCALE_SMOOTH));
//                        break;
//                case 4:
//                    user5_lbl.setIcon(resizeImage(null, userList.getPicture(),user5_lbl.getWidth(), user5_lbl.getHeight(),Image.SCALE_SMOOTH));
//                    break;
//                default:
//                    break;
//            }
            
        }
    }
     public ImageIcon resizeImage(String imagePath, byte[] pic, int width, int height, int SCALE_SMOOTH){
        ImageIcon myImage = null;
        if (imagePath != null) {
            myImage = new ImageIcon(imagePath);
        }else{
            myImage = new ImageIcon(pic);
        }
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(image_lbl.getWidth(), image_lbl.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
    }
     public boolean checkInputs(){
        
        if (fname.getText() == null 
           || lname.getText() == null
           || phone.getText() == null
           || jDateChooser1.getDate() == null
           || password.getText() == null
                || userName.getText() == null)
        {
            return false;
        }else{
            try{
                Float.parseFloat(salary.getText());
                return true;
            }catch(NumberFormatException e){
                return false;
            }   
        }
    }
      public void clearAllFields(){
        id_lbl.setText("");
        fname.setText("");
         lname.setText("");
          userType_cmb.setSelectedItem(null);
          email.setText("");
            phone.setText("");
                       jTextArea1.setText("");
                       jDateChooser1.setDate(null); 
                       jDateChooser1.setDate(this.jDateChooser1.getDate());
                        salary.setText("");
                        image_lbl.setIcon(null);
                        password.setText("");
                        userName.setText("");
                        paymentStatus_lbl.setText("");
                       name_lbl.setText("");
                        pSalary_lbl.setText("");
                       //jComboBox1.setSelectedItem(null);
                        //paymentDate_chooser.setDate(null);
                        pTotal_lbl.setText("");
    }
      private void updateUserTable(){
        PreparedStatement pst = null;
        ResultSet rs = null;
        Connection con = DbConnector.ConnectDB();
        try {
         String sql = "SELECT * FROM users"; 
         pst =con.prepareStatement(sql);
         rs=pst.executeQuery();
         user_tbl.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    
    }    
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton caculate_btn;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel id_lbl;
    private javax.swing.JLabel image_lbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField lname;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel name_lbl;
    private javax.swing.JTextField pSalary_lbl;
    private javax.swing.JTextField pStatus_lbl;
    private javax.swing.JTextField pTotal_lbl;
    private javax.swing.JTextField paidAmount_lbl;
    private javax.swing.JTextField password;
    private com.toedter.calendar.JDateChooser paymentDate_chooser;
    private com.toedter.calendar.JDateChooser paymentDate_chooser1;
    private javax.swing.JLabel paymentStatus_lbl;
    private javax.swing.JTextField phone;
    private javax.swing.JButton proceed_btn;
    private javax.swing.JTextField salary;
    private javax.swing.JTextField userName;
    private javax.swing.JComboBox<String> userType_cmb;
    private javax.swing.JTable user_tbl;
    // End of variables declaration//GEN-END:variables
}
