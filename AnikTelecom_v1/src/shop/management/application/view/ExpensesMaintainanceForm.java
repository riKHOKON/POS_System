/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shop.management.application.view;

import com.mysql.jdbc.JDBC4CallableStatement;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.proteanit.sql.DbUtils;
import shop.management.application.DbConnector;
import shop.management.application.model.Expense;
import shop.management.application.model.Product;
import shop.management.application.model.User;

/**
 *
 * @author rIslam
 */
public class ExpensesMaintainanceForm extends javax.swing.JFrame {

    /**
     * Creates new form ExpensesMaintainanceForm
     */
    private static User usr = new User();
    
    public ExpensesMaintainanceForm() {
        initComponents();
        updateItemTable();
        countExpenseTotal();
        Calendar now = Calendar.getInstance();
        date_chooser.setDateFormatString("yyyy-MM-dd");
        fromDate_chooser.setDateFormatString("yyyy-MM-dd");
        toDate_chooser.setDateFormatString("yyyy-MM-dd");
        date_chooser.setDate(now.getTime());
        fromDate_chooser.setDate(now.getTime());
        toDate_chooser.setDate(now.getTime());
        fillComboBoxWithUserName();
    }
    public ExpensesMaintainanceForm(User u) {
        initComponents();
        updateItemTable();
        countExpenseTotal();
        Calendar now = Calendar.getInstance();
        date_chooser.setDateFormatString("yyyy-MM-dd");
        fromDate_chooser.setDateFormatString("yyyy-MM-dd");
        toDate_chooser.setDateFormatString("yyyy-MM-dd");
        date_chooser.setDate(now.getTime());
        fromDate_chooser.setDate(now.getTime());
        toDate_chooser.setDate(now.getTime());
        fillComboBoxWithUserName();
        ExpensesMaintainanceForm.usr = u;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenses_tbl = new javax.swing.JTable();
        totalExpense_lbl = new javax.swing.JLabel();
        expenseDetails_lbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        des_txt = new javax.swing.JTextArea();
        amount_txt = new javax.swing.JTextField();
        date_chooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        expBy_cmb = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        fromDate_chooser = new com.toedter.calendar.JDateChooser();
        toDate_chooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        searchByDate_btn = new javax.swing.JButton();
        nameToSearch_txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        searchByName_btn = new javax.swing.JButton();
        searchByName_btn1 = new javax.swing.JButton();
        searchByName_btn2 = new javax.swing.JButton();
        searchByName_btn3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        malKroy_btn = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("EXPENSEES MAINTANANCE");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 0, 0), 1, true), "Manage Expenses", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        expenses_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        expenses_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expenses_tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(expenses_tbl);

        totalExpense_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        totalExpense_lbl.setText("Total :");

        expenseDetails_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1132, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(expenseDetails_lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(totalExpense_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(expenseDetails_lbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalExpense_lbl, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "New Expense", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Description :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Amount :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Date :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Expensed By :");

        des_txt.setColumns(20);
        des_txt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        des_txt.setRows(5);
        des_txt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jScrollPane2.setViewportView(des_txt);

        amount_txt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        amount_txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amount_txt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        date_chooser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        date_chooser.setDateFormatString("yyyy-MM-dd");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/allCat.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/cross-circle-frame-icon.png"))); // NOI18N
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Expense Title :");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunch Purpose cost", "Transportation cost", "Entertainment cost", "Bag puarchase cost", "Memo purchase cost", "Night Guard Onarium", "Electricity Bill", "Decoration cost", "Shop rent", "Others" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date_chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(expBy_cmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(amount_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_chooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expBy_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Search for Expenses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        fromDate_chooser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        fromDate_chooser.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        toDate_chooser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        toDate_chooser.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("From :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("To :");

        searchByDate_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchByDate_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/preview.png"))); // NOI18N
        searchByDate_btn.setText("Search");
        searchByDate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByDate_btnActionPerformed(evt);
            }
        });

        nameToSearch_txt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nameToSearch_txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameToSearch_txt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("User Name :");

        searchByName_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchByName_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/preview.png"))); // NOI18N
        searchByName_btn.setText("Search");
        searchByName_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByName_btnActionPerformed(evt);
            }
        });

        searchByName_btn1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchByName_btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/refresh-icon.png"))); // NOI18N
        searchByName_btn1.setText("Refresh");
        searchByName_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByName_btn1ActionPerformed(evt);
            }
        });

        searchByName_btn2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchByName_btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/exit.png"))); // NOI18N
        searchByName_btn2.setText("Close");
        searchByName_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByName_btn2ActionPerformed(evt);
            }
        });

        searchByName_btn3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchByName_btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/pbig.png"))); // NOI18N
        searchByName_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByName_btn3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 10)); // NOI18N
        jLabel8.setText("ri0120@outlook.com");

        malKroy_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        malKroy_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shop/management/application/res/homess.png"))); // NOI18N
        malKroy_btn.setText("Mal Kroy");
        malKroy_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malKroy_btnActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Lunch Purpose cost", "Transportation cost", "Entertainment cost", "Bag puarchase cost", "Memo purchase cost", "Night Guard Onarium", "Electricity Bill", "Decoration cost", "Shop rent", "Others", " " }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fromDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nameToSearch_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(searchByName_btn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(searchByName_btn)
                                        .addGap(18, 18, 18)
                                        .addComponent(searchByName_btn1))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(malKroy_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(searchByName_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(searchByDate_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(toDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDate_chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(searchByDate_btn)
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nameToSearch_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchByName_btn)
                            .addComponent(searchByName_btn1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(malKroy_btn)
                        .addGap(19, 19, 19)
                        .addComponent(searchByName_btn2))
                    .addComponent(searchByName_btn3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            String updateQuery = null;
            PreparedStatement ps = null;
            ResultSet rs = null;
            Connection con = DbConnector.ConnectDB();
        try {
            if (checkInputs()) {
                double amount = 0;
                updateQuery = "SELECT * FROM cashwalet";
                ps = con.prepareStatement(updateQuery);
                rs = ps.executeQuery();
                if (rs.next()) {
                    amount += rs.getDouble("Amount");
                }
                if (amount > Float.parseFloat(amount_txt.getText())) {
                    updateQuery = null;
                    updateQuery = "UPDATE cashwalet SET Amount = ? WHERE CashWaletId = ?";
                    ps = con.prepareStatement(updateQuery);
                    ps.setDouble(1,(amount - Float.parseFloat(amount_txt.getText())));
                    ps.setInt(2, 1);
                    ps.executeUpdate();
                    updateQuery = null;
                    ps = con.prepareStatement("INSERT INTO expenses (ExpenseTitle,Description,Date, ExpensedBy,Amount) VALUES (?,?,?,?,?)");
                    ps.setString(1,jComboBox1.getSelectedItem().toString());
                    ps.setString(2, des_txt.getText());
                    SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
                    String addDate = dateFormate.format(date_chooser.getDate());
                    ps.setString(3, addDate);
                    ps.setString(4, expBy_cmb.getSelectedItem().toString());
                    ps.setFloat(5, Float.parseFloat(amount_txt.getText()));
                    ps.executeUpdate();
                    updateItemTable();
                    JOptionPane.showMessageDialog(null, "Record added.");
                    countExpenseTotal();
                    clearFields();
                }else{
                    JOptionPane.showMessageDialog(null, "Sorry! Money crisis. Please confirm CashIn to walet.");
                }      
            }else{
                    JOptionPane.showMessageDialog(null, "Confirm all fields frist."); 
            }     
        } catch (HeadlessException | SQLException e) {
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchByDate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByDate_btnActionPerformed
        float totalAmount = 0;
        SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
        String dateFrom = dateFormate.format(fromDate_chooser.getDate());
        String dateTo = dateFormate.format(toDate_chooser.getDate());
        String type = jComboBox2.getSelectedItem().toString();
        
            if (checkDates()) {
                try {
                    for (Expense allDateWiseExpense : getAllDateWiseExpenses(dateFrom, dateTo,type)) {
                        totalAmount += allDateWiseExpense.getAmount();
                    }
                    searchExpensesFromDateToDate(dateFrom,dateTo);
                    totalExpense_lbl.setText("Total : ৳"+Float.toString(totalAmount));
                    getAllDateWiseExpenses(dateTo, dateTo,type).clear();
                    totalAmount = 0;
                } catch (SQLException e) {
                
                } 
            }else{
                JOptionPane.showMessageDialog(null, "Select dates frist!");
            }
    }//GEN-LAST:event_searchByDate_btnActionPerformed

    private void searchByName_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByName_btnActionPerformed
        float totalExpense = 0;
        String name = nameToSearch_txt.getText();
        if (name != null) {
            try {
                searchExpensesByCreator(name);
                for (Expense allExpensesByCreator : getAllExpensesByCreator(name)) {
                    totalExpense += allExpensesByCreator.getAmount();
                }
                totalExpense_lbl.setText("Total : ৳"+Float.toString(totalExpense));
                nameToSearch_txt.setText("");
                getAllExpensesByCreator(name).clear();
                totalExpense = 0;
            } catch (SQLException e) {
            }
        }else JOptionPane.showMessageDialog(null, "Select creator name frist!");
    }//GEN-LAST:event_searchByName_btnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clearFields();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchByName_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByName_btn1ActionPerformed
        updateItemTable();
        clearFields();
        countExpenseTotal();
    }//GEN-LAST:event_searchByName_btn1ActionPerformed

    private void searchByName_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByName_btn2ActionPerformed
         java.awt.EventQueue.invokeLater(() -> {
             new ActivitiesForm(usr).setVisible(true);
         });
        this.dispose();
    }//GEN-LAST:event_searchByName_btn2ActionPerformed

    private void searchByName_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByName_btn3ActionPerformed
        MessageFormat header = new MessageFormat("Expense Report.   "+totalExpense_lbl.getText());
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            expenses_tbl.print(JTable.PrintMode.FIT_WIDTH,header,footer);
            //totalExpense_lbl.print(jLabel1.printAll());
        } catch (PrinterException e) {
        }
    }//GEN-LAST:event_searchByName_btn3ActionPerformed

    private void expenses_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expenses_tblMouseClicked
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        int row = expenses_tbl.getSelectedRow();
        String index = (expenses_tbl.getModel().getValueAt(row, 0).toString());
        try {
            String query = "SELECT * FROM expenses WHERE ExpenseId = '"+index+"'";
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            if (rs.next()) {
                int expenseId = rs.getInt("ExpenseId");
                String description = rs.getString("Description");
                String dateValue = rs.getString("Date");
                java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dateValue);
                String expensedBy = rs.getString("ExpensedBy");
                float pCost = rs.getFloat("Amount");
                String tk = "৳";
                expenseDetails_lbl.setText("Id : "+Integer.toString(expenseId)+", Description : "+description+", Expensed by :"+expensedBy+", Amount : "+tk+pCost);
            }
        } catch (SQLException | ParseException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        } 
    }//GEN-LAST:event_expenses_tblMouseClicked

    private void malKroy_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malKroy_btnActionPerformed
        java.awt.EventQueue.invokeLater(() -> {
            new MalKroyForm().setVisible(true);
            this.dispose();
        });
    }//GEN-LAST:event_malKroy_btnActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpensesMaintainanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpensesMaintainanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpensesMaintainanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpensesMaintainanceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ExpensesMaintainanceForm().setVisible(true);
        });
    }
    private void updateItemTable(){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
         String sql = "SELECT * FROM expenses"; 
         pst = con.prepareStatement(sql);
         rs = pst.executeQuery();
         expenses_tbl.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally{
            try {
                rs.close();
                pst.close();
                con.close();
            } catch (SQLException e) {
            
            }
        }
    
    }
    private ArrayList<Expense> getAllExpenses() throws SQLException{
        ArrayList<Expense> expenses = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM expenses";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Expense expense;
            while(rs.next()){
                expense = new Expense(rs.getInt("ExpenseId"),rs.getString("ExpenseTitle"),rs.getString("Description"),rs.getDate("Date").toString(),rs.getFloat("Amount"),rs.getString("ExpensedBy"));
                expenses.add(expense);
            }
        } catch (SQLException ex) {
            //Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return expenses;
    }
    private void countExpenseTotal(){
        float totalExpense = 0;
        try {
            for (Expense allExpense : getAllExpenses()) {
                totalExpense += allExpense.getAmount();
            }
            totalExpense_lbl.setText("Total :৳"+Float.toString(totalExpense));
            getAllExpenses().clear();
            totalExpense = 0;
        } catch (SQLException e) {
        }
        
    }
    private boolean checkInputs(){
        if ("".equals(des_txt.getText())
           || amount_txt.getText() == null 
                || date_chooser.getDate() == null
           || expBy_cmb.getSelectedItem().toString() == null
           )
        {
            return false;
        }else{
            try{
                Float.parseFloat(amount_txt.getText());
                return true;
            }catch(NumberFormatException e){
                return false;
            }   
        }
    }
    private boolean checkDates(){
        SimpleDateFormat dateFormate = new SimpleDateFormat("yyyy-MM-dd");
        String dateFrom = dateFormate.format(fromDate_chooser.getDate());
        String dateTo = dateFormate.format(toDate_chooser.getDate());
        return !(dateFrom == null || dateTo == null);
    }
    private void clearFields(){
        des_txt.setText("");
        amount_txt.setText("");
        //date_chooser.setDate(null);
        //expBy_cmb.setSelectedItem(null);
        
    }
    private void searchExpensesFromDateToDate(String fDate,String tDate){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
            String title = jComboBox2.getSelectedItem().toString();
            if(title=="All"){
                String sql = "SELECT * FROM expenses WHERE Date >= '"+fDate+"' AND Date <= '"+tDate+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
            }
            else{
                String sql = "SELECT * FROM expenses WHERE Date >= '"+fDate+"' AND Date <= '"+tDate+"' AND ExpenseTitle='"+title+"'"; 
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
            }
            expenses_tbl.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
        }
    }
    private void searchExpensesByCreator(String name){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
            String sql = "SELECT * FROM expenses WHERE ExpensedBy = '"+name+"'"; 
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            expenses_tbl.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException e) {
        }
        finally{
            try {
                rs.close();
                //st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
    }
    
    private ArrayList<Expense> getAllDateWiseExpenses(String fDate,String tDate,String type) throws SQLException{
        ArrayList<Expense> expenses = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        if(type == "All"){
            String query  = "SELECT * FROM expenses WHERE Date >= '"+fDate+"' AND Date <= '"+tDate+"'";
            Statement st = con.createStatement();
            ResultSet rs = null;
            try {
                rs = st.executeQuery(query);
                Expense expense;
                while(rs.next()){
                    expense = new Expense(rs.getInt("ExpenseId"),rs.getString("ExpenseTitle"),rs.getString("Description"),rs.getDate("Date").toString(),rs.getFloat("Amount"),rs.getString("ExpensedBy"));
                    expenses.add(expense);
                }
            } catch (SQLException ex) {
                //Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                try {
                    rs.close();
                    st.close();
                    con.close();
                } catch (SQLException e) {
                }
            }
        }else{
            String query  = "SELECT * FROM expenses WHERE Date >= '"+fDate+"' AND Date <= '"+tDate+"' AND ExpenseTitle = '"+type+"'";
            Statement st = con.createStatement();
            ResultSet rs = null;
            try {
                rs = st.executeQuery(query);
                Expense expense;
                while(rs.next()){
                    expense = new Expense(rs.getInt("ExpenseId"),rs.getString("ExpenseTitle"),rs.getString("Description"),rs.getDate("Date").toString(),rs.getFloat("Amount"),rs.getString("ExpensedBy"));
                    expenses.add(expense);
                }
            } catch (SQLException ex) {
                //Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally{
                try {
                    rs.close();
                    st.close();
                    con.close();
                } catch (SQLException e) {
                }
            }
        
        }
        return expenses;
    }
    private ArrayList<Expense> getAllExpensesByCreator(String name) throws SQLException{
        ArrayList<Expense> expenses = new ArrayList<>();
        Connection con = DbConnector.ConnectDB();
        String query  = "SELECT * FROM expenses WHERE ExpensedBy = '"+name+"'";
        Statement st = con.createStatement();
        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
            Expense expense;
            while(rs.next()){
                expense = new Expense(rs.getInt("ExpenseId"),rs.getString("ExpenseTitle"),rs.getString("Description"),rs.getDate("Date").toString(),rs.getFloat("Amount"),rs.getString("ExpensedBy"));
                expenses.add(expense);
            }
        } catch (SQLException ex) {
            //Logger.getLogger(HomeForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        finally{
            try {
                rs.close();
                st.close();
                con.close();
            } catch (SQLException e) {
            }
        }
        return expenses;
    }
    private void fillComboBoxWithUserName(){
        PreparedStatement pst = null;
        Connection con = DbConnector.ConnectDB();
        ResultSet rs = null;
        try {
            String sql = "SELECT * FROM users"; 
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                expBy_cmb.addItem(rs.getString(15));   
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            } finally{
                try {
                    rs.close();
                    pst.close();
                    con.close();
                } catch (SQLException e) {
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount_txt;
    private com.toedter.calendar.JDateChooser date_chooser;
    private javax.swing.JTextArea des_txt;
    private javax.swing.JComboBox<String> expBy_cmb;
    private javax.swing.JLabel expenseDetails_lbl;
    private javax.swing.JTable expenses_tbl;
    private com.toedter.calendar.JDateChooser fromDate_chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton malKroy_btn;
    private javax.swing.JTextField nameToSearch_txt;
    private javax.swing.JButton searchByDate_btn;
    private javax.swing.JButton searchByName_btn;
    private javax.swing.JButton searchByName_btn1;
    private javax.swing.JButton searchByName_btn2;
    private javax.swing.JButton searchByName_btn3;
    private com.toedter.calendar.JDateChooser toDate_chooser;
    private javax.swing.JLabel totalExpense_lbl;
    // End of variables declaration//GEN-END:variables
}
